@model IEnumerable<CellarBotHome.Models.Beer>
@using PagedList;
@using PagedList.Mvc;

@{
    ViewBag.Title = "List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>
    $(document).ready(function () {
        $("#beerSearch").autocomplete({
            minLength: 2,
            source: function (req, resp) { // get JSON object from SearchController
                $.ajax({
                    url: "/Beer/Search", // SearchController JsonResult
                    type: "POST",
                    dataType: "json",
                    data: { term: req.term },
                    success: function (data) {
                        resp($.map(data, function (item) {
                            return { label: item.name, id: item.id };
                        }));
                    }
                });
            },
            select: function (event, ui) {
                var selected = ui.item;
                navigateToBeer(selected.id);
            }
        });
    });

    function navigateToBeer(beerNum) {
        var replaceMe = 1234;
        var actionUrl = '@Url.Action("Details", "Beer", new { id = 1234 } )';

        window.navigate(actionUrl.replace(replaceMe, beerNum));
    }
</script>

<h2>List of Beers</h2>
<div>
    @using (Html.BeginForm("SearchResults", "Beer"))
    {

        @Html.Label("Beer Search", new { @class = "control-label col-md-2" })
        <input id="beerSearch" name="searchTerm" />

    }
</div>

<div>
    @Html.ActionLink("Create New", "Create")
</div>

<ul>
    @foreach (var beer in ViewBag.OnePageOfBeers)
    {
        <li>@Html.ActionLink((string)beer.name, "Details", new { id = beer.id })</li>
    }
</ul>
<!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
@Html.PagedListPager((PagedList.IPagedList)ViewBag.OnePageOfBeers, page => Url.Action("Index", new { page }))